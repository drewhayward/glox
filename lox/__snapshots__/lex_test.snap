
[TestLexSnapshot/ScanTokens("()") - 1]
[]lox.Token{
    {type_:"LEFT_PAREN", lexeme:"(", literal:"", line:1},
    {type_:"RIGHT_PAREN", lexeme:")", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("{}") - 1]
[]lox.Token{
    {type_:"LEFT_BRACE", lexeme:"{", literal:"", line:1},
    {type_:"RIGHT_BRACE", lexeme:"}", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("/") - 1]
[]lox.Token{
    {type_:"SLASH", lexeme:"/", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens(".") - 1]
[]lox.Token{
    {type_:"DOT", lexeme:".", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens(",") - 1]
[]lox.Token{
    {type_:"COMMA", lexeme:",", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("-") - 1]
[]lox.Token{
    {type_:"MINUS", lexeme:"-", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("+") - 1]
[]lox.Token{
    {type_:"PLUS", lexeme:"+", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens(";") - 1]
[]lox.Token{
    {type_:"SEMICOLON", lexeme:";", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("/")#01 - 1]
[]lox.Token{
    {type_:"SLASH", lexeme:"/", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("*") - 1]
[]lox.Token{
    {type_:"STAR", lexeme:"*", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("!") - 1]
[]lox.Token{
    {type_:"BANG", lexeme:"!", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("!=") - 1]
[]lox.Token{
    {type_:"BANG_EQUAL", lexeme:"!=", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("=") - 1]
[]lox.Token{
    {type_:"EQUAL", lexeme:"=", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("==") - 1]
[]lox.Token{
    {type_:"EQUAL_EQUAL", lexeme:"==", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens(">=") - 1]
[]lox.Token{
    {type_:"GREATER_EQUAL", lexeme:">=", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens(">") - 1]
[]lox.Token{
    {type_:"GREATER", lexeme:">", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("<") - 1]
[]lox.Token{
    {type_:"LESS", lexeme:"<", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("<=") - 1]
[]lox.Token{
    {type_:"LESS_EQUAL", lexeme:"<=", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("\"testing\"") - 1]
[]lox.Token{
    {type_:"STRING", lexeme:"testing", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("123") - 1]
[]lox.Token{
    {type_:"NUMBER", lexeme:"123", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("123.") - 1]
[]lox.Token{
    {type_:"NUMBER", lexeme:"123", literal:"", line:1},
    {type_:"DOT", lexeme:".", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("123.09") - 1]
[]lox.Token{
    {type_:"NUMBER", lexeme:"123.09", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("testing") - 1]
[]lox.Token{
    {type_:"IDENTIFIER", lexeme:"testing", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("for") - 1]
[]lox.Token{
    {type_:"FOR", lexeme:"for", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("and") - 1]
[]lox.Token{
    {type_:"AND", lexeme:"and", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("class") - 1]
[]lox.Token{
    {type_:"CLASS", lexeme:"class", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("else") - 1]
[]lox.Token{
    {type_:"ELSE", lexeme:"else", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("false") - 1]
[]lox.Token{
    {type_:"FALSE", lexeme:"false", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("fun") - 1]
[]lox.Token{
    {type_:"FUN", lexeme:"fun", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("for")#01 - 1]
[]lox.Token{
    {type_:"FOR", lexeme:"for", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("if") - 1]
[]lox.Token{
    {type_:"IF", lexeme:"if", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("nil") - 1]
[]lox.Token{
    {type_:"NIL", lexeme:"nil", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("or") - 1]
[]lox.Token{
    {type_:"OR", lexeme:"or", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("print") - 1]
[]lox.Token{
    {type_:"PRINT", lexeme:"print", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("return") - 1]
[]lox.Token{
    {type_:"RETURN", lexeme:"return", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("super") - 1]
[]lox.Token{
    {type_:"SUPER", lexeme:"super", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("this") - 1]
[]lox.Token{
    {type_:"THIS", lexeme:"this", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("true") - 1]
[]lox.Token{
    {type_:"TRUE", lexeme:"true", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("var") - 1]
[]lox.Token{
    {type_:"VAR", lexeme:"var", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("var\nvar") - 1]
[]lox.Token{
    {type_:"VAR", lexeme:"var", literal:"", line:1},
    {type_:"VAR", lexeme:"var", literal:"", line:2},
}
---

[TestLexSnapshot/ScanTokens("while_") - 1]
[]lox.Token{
    {type_:"WHILE", lexeme:"while", literal:"", line:1},
}
---

[TestLexSnapshot/ScanTokens("var_test_=_\"foobar\";") - 1]
[]lox.Token{
    {type_:"VAR", lexeme:"var", literal:"", line:1},
    {type_:"IDENTIFIER", lexeme:"test", literal:"", line:1},
    {type_:"EQUAL", lexeme:"=", literal:"", line:1},
    {type_:"STRING", lexeme:"foobar", literal:"", line:1},
    {type_:"SEMICOLON", lexeme:";", literal:"", line:1},
}
---
